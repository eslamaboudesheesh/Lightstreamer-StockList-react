[{"C:\\Users\\t-emhussein\\Desktop\\stockGrid\\stock-list\\src\\index.js":"1","C:\\Users\\t-emhussein\\Desktop\\stockGrid\\stock-list\\src\\reportWebVitals.js":"2","C:\\Users\\t-emhussein\\Desktop\\stockGrid\\stock-list\\src\\App.js":"3","C:\\Users\\t-emhussein\\Desktop\\stockGrid\\stock-list\\src\\components\\StockTable.js":"4","C:\\Users\\t-emhussein\\Desktop\\stockGrid\\stock-list\\src\\components\\StockList.js":"5","C:\\Users\\t-emhussein\\Desktop\\stockGrid\\stock-list\\src\\components\\Stock.js":"6","C:\\Users\\t-emhussein\\Desktop\\stockGrid\\stock-list\\src\\components\\Constants.js":"7","C:\\Users\\t-emhussein\\Desktop\\stockGrid\\stock-list\\src\\components\\format.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":692,"mtime":1609327624978,"results":"12","hashOfConfig":"10"},{"size":679,"mtime":1609269296898,"results":"13","hashOfConfig":"10"},{"size":238,"mtime":1609269296898,"results":"14","hashOfConfig":"10"},{"size":3822,"mtime":1609370245749,"results":"15","hashOfConfig":"10"},{"size":925,"mtime":1609371486890,"results":"16","hashOfConfig":"10"},{"size":648,"mtime":1609370249674,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1y3f1fc",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"C:\\Users\\t-emhussein\\Desktop\\stockGrid\\stock-list\\src\\index.js",[],["37","38"],"C:\\Users\\t-emhussein\\Desktop\\stockGrid\\stock-list\\src\\reportWebVitals.js",[],"C:\\Users\\t-emhussein\\Desktop\\stockGrid\\stock-list\\src\\App.js",[],"C:\\Users\\t-emhussein\\Desktop\\stockGrid\\stock-list\\src\\components\\StockTable.js",[],"C:\\Users\\t-emhussein\\Desktop\\stockGrid\\stock-list\\src\\components\\StockList.js",[],"C:\\Users\\t-emhussein\\Desktop\\stockGrid\\stock-list\\src\\components\\Stock.js",["39","40","41"],"import React, { useState, useEffect } from 'react'\r\nimport Constants from './Constants'\r\nimport {\r\n  LightstreamerClient\r\n} from 'lightstreamer-client-web/lightstreamer-core.esm'\r\nimport { Subscription } from 'lightstreamer-client-web/lightstreamer-core.esm'\r\nimport {\r\n  DynaGrid} from 'lightstreamer-client-web/lightstreamer.esm'\r\nimport formatDecimal from './format'\r\n\r\nexport default function Stock({ items , fields }) {\r\n\r\n  let [state, setstate] = useState({})\r\n  useEffect(() => {\r\n    var hotTxtCol = '#000000'\r\n    var imgUp = './quotes_up.gif'\r\n    var imgDown = './quotes_down.gif'\r\n\r\n    var sub = new Subscription(\r\n      'MERGE',\r\n      items,\r\n      fields && fields.map((fieldDef) => fieldDef.field),\r\n    )\r\n    sub.setDataAdapter('QUOTE_ADAPTER')\r\n    sub.setRequestedSnapshot('yes')\r\n    sub.setRequestedMaxFrequency(1)\r\n\r\n    sub.addListener({\r\n      onItemUpdate: function (obj) {\r\n        state = {}\r\n        obj.forEachField(function (name, pos, val) {\r\n          state[name] = val\r\n        })\r\n\r\n        setstate(state)\r\n      },\r\n    })\r\n\r\n    const dynaGrid = new DynaGrid('stocks', true)\r\n    dynaGrid.setNodeTypes(['div', 'span', 'img', 'a', 'input', 'tr', 'td'])\r\n    dynaGrid.setAutoCleanBehavior(true, false)\r\n\r\n    dynaGrid.addListener({\r\n      onVisualUpdate: function (key, info) {\r\n        if (info == null) {\r\n          //cleaning\r\n          return\r\n        }\r\n        // illumination color\r\n        // choose the backgroundColor\r\n        var lastPrice = info.getChangedFieldValue('last_price')\r\n        if (lastPrice !== null) {\r\n          var prevPrice = dynaGrid.getValue(key, 'last_price')\r\n          if (!prevPrice || lastPrice > prevPrice) {\r\n            info.setAttribute('lightgreen', null, 'backgroundColor')\r\n          } else {\r\n            info.setAttribute('#f8b87a', null, 'backgroundColor')\r\n          }\r\n        } else {\r\n          info.setAttribute('lightgreen', null, 'backgroundColor')\r\n        }\r\n\r\n        //put arrow and handle change style\r\n\r\n        var pctChange = info.getChangedFieldValue('pct_change')\r\n        if (pctChange !== null) {\r\n          pctChange = formatDecimal(pctChange, 2, true) + '%'\r\n          hotTxtCol = pctChange.charAt(0) == '-' ? '#dd0000' : '#009900'\r\n          if (pctChange.indexOf('-') > -1) {\r\n            info.setCellValue('arrow', imgDown)\r\n            info.setCellAttribute('arrow', null, null, 'backgroundColor')\r\n\r\n            info.setCellAttribute('pct_change', 'black', hotTxtCol, 'color')\r\n            info.setCellValue('pct_change', pctChange)\r\n          } else {\r\n            info.setCellValue('arrow', imgUp)\r\n            info.setCellAttribute('arrow', null, null, 'backgroundColor')\r\n\r\n            info.setCellAttribute('pct_change', 'black', hotTxtCol, 'color')\r\n            info.setCellValue('pct_change', '+' + pctChange)\r\n          }\r\n          info.setCellAttribute('pct_change', 'bold', 'bold', 'fontWeight')\r\n        }\r\n      },\r\n    })\r\n\r\n    sub.addListener(dynaGrid)\r\n    var lsClient = new LightstreamerClient(\r\n      Constants().SERVER,\r\n      Constants().ADAPTER,\r\n    )\r\n\r\n    lsClient.connect()\r\n    lsClient.subscribe(sub)\r\n    return () => {\r\n      // lsClient.unsubscribe(sub)\r\n    }\r\n  }, [state])\r\n\r\n  return (\r\n    <>\r\n      <tr data-source=\"lightstreamer\" id=\"stocks\">\r\n        {fields.map(function (fieldDef) {\r\n          return (\r\n            <td key={fieldDef.field}>\r\n           { fieldDef.field == \"arrow\" ? ( <div><img data-source=\"lightstreamer\" data-field=\"arrow\" data-update=\"src\" src=\"./spacer.gif\" width=\"20\" height=\"8\" border=\"0\" alt=\"arrow\"/> </div>  ) : \r\n\r\n              <div data-source=\"lightstreamer\" data-field={fieldDef.field}>\r\n                {state[fieldDef.field]}\r\n              </div>\r\n        }\r\n            </td>\r\n          )\r\n        })}\r\n      </tr>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\t-emhussein\\Desktop\\stockGrid\\stock-list\\src\\components\\Constants.js",[],"C:\\Users\\t-emhussein\\Desktop\\stockGrid\\stock-list\\src\\components\\format.js",["42","43","44","45"],"export default function formatDecimal(value, decimals, keepZero) {\r\n    var mul = new String(\"1\");\r\n    var zero = new String(\"0\");\r\n    for (let i = decimals; i > 0; i--) {\r\n      mul += zero;\r\n    }\r\n    value = Math.round(value * mul);\r\n    value = value / mul;\r\n    var strVal = new String(value);\r\n    if (!keepZero) {\r\n      return strVal;\r\n    }\r\n  \r\n    var nowDecimals = 0;\r\n    var dot = strVal.indexOf(\".\");\r\n    if (dot == -1) {\r\n      strVal += \".\";\r\n    } else {\r\n      nowDecimals = strVal.length - dot - 1;\r\n    }\r\n    for (let i = nowDecimals; i < decimals; i++) {\r\n      strVal = strVal + zero;\r\n    }\r\n  \r\n    return strVal;\r\n  }",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":30,"column":17,"nodeType":"52","endLine":30,"endColumn":19},{"ruleId":"53","severity":1,"message":"54","line":68,"column":43,"nodeType":"55","messageId":"56","endLine":68,"endColumn":45},{"ruleId":"53","severity":1,"message":"54","line":106,"column":29,"nodeType":"55","messageId":"56","endLine":106,"endColumn":31},{"ruleId":"57","severity":1,"message":"58","line":2,"column":15,"nodeType":"59","messageId":"60","endLine":2,"endColumn":30},{"ruleId":"57","severity":1,"message":"58","line":3,"column":16,"nodeType":"59","messageId":"60","endLine":3,"endColumn":31},{"ruleId":"57","severity":1,"message":"58","line":9,"column":18,"nodeType":"59","messageId":"60","endLine":9,"endColumn":35},{"ruleId":"53","severity":1,"message":"54","line":16,"column":13,"nodeType":"55","messageId":"56","endLine":16,"endColumn":15},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"react-hooks/exhaustive-deps","Assignments to the 'state' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","no-global-assign","no-unsafe-negation"]